{"version":3,"file":"static/js/578.2c2d945c.chunk.js","mappings":"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","sources":["services/rickAndMortyAPI.js","components/Loader/Loader.jsx","components/Hero/Hero.styled.js","components/Hero/Hero.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/CharacterList/CharacterList.styled.js","components/CharacterList/CharacterList.jsx","pages/CharactersFeed/CharactersFeed.styled.js","pages/CharactersFeed/CharactersFeed.jsx"],"sourcesContent":["// Utils\nimport axios from 'axios';\n\n// Setups\naxios.defaults.baseURL = 'https://rickandmortyapi.com/api';\n\n// HTTP requests\nexport const getCharactersFeed = async () => {\n  try {\n    const { data } = await axios.get('./character/?page=2');\n    return normalizedList(data.results);\n  } catch (error) {\n    console.log('error:', error.message);\n  }\n};\n\nexport const getCharacterDetails = async id => {\n  try {\n    const { data } = await axios.get(`./character/${id}`);\n    return data;\n  } catch (error) {\n    console.log('error:', error.message);\n  }\n};\n\nconst normalizedList = feed =>\n  feed.map(({ id, name, species, image }) => ({\n    id,\n    name,\n    species: species ? species : 'Unknown yet',\n    image,\n  }));\n","// Utils\nimport { Oval } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Oval\n      height={80}\n      width={80}\n      color=\"#01b0c8\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"oval-loading\"\n      secondaryColor=\"#a5fd91\"\n      strokeWidth={2}\n      strokeWidthSecondary={1}\n    />\n  );\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Img = styled.img`\n  margin: 0 auto 30px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 600px;\n    margin-bottom: 16px;\n  }\n`;\n","// Styles\nimport { Img } from './Hero.styled';\n\n// Images\nimport heroDesk1x from '../../assets/imgs/hero-desk-x1.png';\nimport heroMob1x from '../../assets/imgs/hero-mob-x1.png';\nimport heroDesk2x from '../../assets/imgs/hero-desk-x2.png';\nimport heroMob2x from '../../assets/imgs/hero-mob-x2.png';\n\nexport const Hero = () => {\n  return (\n    <picture>\n      <source\n        srcSet={`${heroDesk1x} 1x, ${heroDesk2x} 2x`}\n        media=\"(min-width: 768px)\"\n      />\n      <source\n        srcSet={`${heroMob1x} 1x, ${heroMob2x} 2x`}\n        media=\"(min-width: 320px)\"\n      />\n      <Img src=\"imgs/hero-mob-x1.png\" alt=\"Rick and Morty banner\" />\n    </picture>\n  );\n};\n","// Utils\nimport styled from 'styled-components';\nimport { BiSearchAlt2 } from 'react-icons/bi';\nimport { DebounceInput } from 'react-debounce-input';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n\n  width: 100%;\n  margin: 0 auto;\n  margin-bottom: 32px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 61px;\n  }\n`;\n\nexport const Input = styled(DebounceInput)`\n  padding: 16px;\n  padding-left: 48px;\n  width: 100%;\n\n  border-radius: 8px;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  outline: none;\n\n  color: rgba(0, 0, 0, 0.5);\n  line-height: 150%;\n\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border: 1px solid #a5fd91;\n  }\n\n  &:not(:placeholder-shown) {\n    border: 1px solid #01b0c8;\n  }\n`;\n\nexport const Icon = styled(BiSearchAlt2)`\n  position: absolute;\n  left: 16px;\n\n  width: 24px;\n  height: 24px;\n\n  color: rgba(0, 0, 0, 0.54);\n`;\n","// Core\n// import { useSearchParams } from 'react-router-dom';\n\n// Styles\nimport { Wrapper, Input, Icon } from './SearchBox.styled';\n\nexport const SearchBox = () => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"text\"\n        debounceTimeout={300}\n        placeholder=\"Filter by name...\"\n      />\n    </Wrapper>\n  );\n};\n\nexport default SearchBox;\n","// Utils\nimport styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 312px);\n  justify-content: center;\n  gap: 32px;\n\n  @media screen and (min-width: 1020px) {\n    grid-template-columns: repeat(4, 240px);\n    gap: 24px 20px;\n  } ;\n`;\n\nexport const CardWrapper = styled.li`\n  background: #ffffff;\n  box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.2), 0px 3px 4px rgba(0, 0, 0, 0.12),\n    0px 2px 4px rgba(0, 0, 0, 0.14);\n  border-radius: 4px;\n  cursor: pointer;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const Img = styled.img`\n  height: auto;\n  width: 100%;\n\n  object-fit: cover;\n  object-position: 50% 10%;\n\n  @media screen and (min-width: 768px) {\n    height: 168px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  padding: 12px 16px;\n`;\n\nexport const Name = styled.h2`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 150%;\n  letter-spacing: 0.15px;\n`;\n\nexport const Species = styled.p`\n  font-size: 14px;\n  line-height: 150%;\n  letter-spacing: 0.25px;\n\n  color: rgba(0, 0, 0, 0.6);\n`;\n","// Core\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// Styles\nimport {\n  Container,\n  CardWrapper,\n  Img,\n  InfoWrapper,\n  Name,\n} from './CharacterList.styled';\n\nexport const CharacterList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {data.map(({ id, name, image, species }) => (\n        <CardWrapper key={id}>\n          <Link to={`/feed/${id}`} state={{ from: location }}>\n            <Img src={image} alt={name} />\n            <InfoWrapper>\n              <Name>{name}</Name>\n              <p>{species}</p>\n            </InfoWrapper>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nCharacterList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 100%;\n  padding: 0 24px;\n  margin: 92px auto 223px;\n\n  @media screen and (min-width: 480px) {\n    max-width: 480px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    margin: 86px auto 188px;\n  }\n\n  @media screen and (min-width: 1020px) {\n    min-width: 1020px;\n    padding: 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n    padding: 0 210px;\n  }\n`;\n","// Core\nimport { useState, useEffect } from 'react';\nimport { toast, Toaster } from 'react-hot-toast';\n\n// API\nimport { getCharactersFeed } from 'services/rickAndMortyAPI';\n\n// Components\nimport { Loader } from 'components/Loader';\nimport { Hero } from 'components/Hero';\nimport { SearchBox } from 'components/SearchBox';\nimport { CharacterList } from 'components/CharacterList';\n\n// Styles\nimport { Container } from './CharactersFeed.styled';\n\nconst CharactersFeed = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    const getCharacters = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const result = await getCharactersFeed();\n        setCharacters(result);\n        setLoading(false);\n      } catch (error) {\n        setError('Oops, something went wrong. Please, try again later!');\n      }\n    };\n\n    getCharacters();\n  }, []);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  if (loading) return <Loader />;\n  if (error) return <Toaster position=\"top-right\" />;\n\n  return (\n    <main>\n      <Container>\n        <Hero />\n        <SearchBox />\n        {characters.length > 0 && <CharacterList data={characters} />}\n      </Container>\n    </main>\n  );\n};\n\nexport default CharactersFeed;\n"],"names":["axios","getCharactersFeed","data","normalizedList","results","console","log","message","feed","map","id","name","species","image","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","Img","styled","Hero","srcSet","heroDesk1x","heroDesk2x","media","heroMob1x","heroMob2x","src","alt","Wrapper","Input","DebounceInput","Icon","BiSearchAlt2","SearchBox","type","debounceTimeout","placeholder","Container","CardWrapper","InfoWrapper","Name","CharacterList","location","useLocation","to","state","from","useState","loading","setLoading","error","setError","characters","setCharacters","useEffect","getCharacters","result","toast","position","length"],"sourceRoot":""}