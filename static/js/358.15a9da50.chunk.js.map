{"version":3,"file":"static/js/358.15a9da50.chunk.js","mappings":"uRAGaA,EAAYC,EAAAA,GAAAA,IAAH,qEAKTC,EAAWD,EAAAA,GAAAA,EAAH,4FAQRE,EAAQF,EAAAA,GAAAA,GAAH,sIAULG,EAAOH,EAAAA,GAAAA,KAAH,gHAQJI,EAAQJ,EAAAA,GAAAA,MAAH,0IAYLK,EAAQL,EAAAA,GAAAA,MAAH,2ZAwBLM,EAAMN,EAAAA,GAAAA,OAAH,wWAmBHO,EAAaP,EAAAA,GAAAA,EAAH,iH,SCzEVQ,EAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,UACXC,GAAWD,EAAAA,EAAAA,UACjB,GAAiCE,EAAAA,EAAAA,MAAzBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,aAUVC,EAAY,mCAAG,2FACbC,EAAQP,EAASQ,QAAQC,MADZ,SAIbJ,EAAaE,GAJA,OAKnBA,EAAMG,IAAIF,QAAQC,MAAQ,GALP,2CAAH,qDAQlB,OACE,UAACnB,EAAD,YACE,SAACE,EAAD,4BACA,SAACC,EAAD,uCACA,UAACC,EAAD,CAAMiB,SApBO,SAAAC,GACfA,EAAEC,iBACF,IAAMN,EAAQP,EAASQ,QAAQC,MACzBK,EAAQZ,EAASM,QAAQC,MAE3BF,GAASO,GAAOV,EAAOG,EAAOO,EACnC,EAcG,WACE,UAACnB,EAAD,oBAEE,SAACC,EAAD,CACEmB,KAAK,QACLC,YAAY,oBACZC,aAAa,KACbC,IAAKlB,QAGT,UAACL,EAAD,uBAEE,SAACC,EAAD,CACEmB,KAAK,WACLC,YAAY,WACZC,aAAa,KACbC,IAAKhB,QAGT,SAACJ,EAAD,CAAYqB,QAASb,EAArB,+BACA,SAACT,EAAD,CAAKkB,KAAK,SAAV,0BAIP,ECjEYK,EAAS,WACpB,OAAO,iCACR,ECCY9B,EAAYC,EAAAA,GAAAA,IAAH,6FCQT8B,EAAO,WAClB,OAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KAIA,GAA+CrB,EAAAA,EAAAA,MAAvCsB,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,iBAE1B,OACE,UAAC,EAAD,WACIH,GAAqB,SAACH,EAAD,KAAb,SAACrB,EAAD,KACV,0BACE,oCAEF,mBAAQoB,QAASM,EAAjB,mCACA,mBAAQN,QAASO,EAAjB,mCACA,cAAGP,QAZa,kBAAMK,GAAS,SAAAG,GAAS,OAAKA,CAAL,GAAxB,EAYhB,SACIJ,EAAkC,0BAA1B,4BAIjB,ECxBD,EAJa,WACX,OAAO,SAACF,EAAD,GACR,C","sources":["components/SignIn/SignIn.styled.js","components/SignIn/SignIn.jsx","components/SignUp/SignUp.jsx","components/Auth/Auth.styled.js","components/Auth/Auth.jsx","pages/Home.jsx"],"sourcesContent":["// Utils\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Greeting = styled.p`\n  line-height: 19px;\n\n  color: #2d3748;\n\n  margin-bottom: 2px;\n`;\n\nexport const Login = styled.h1`\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 35px;\n\n  color: #1a202c;\n\n  margin-bottom: 24px;\n`;\n\nexport const Form = styled.form`\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 27px;\n`;\n\nexport const Label = styled.label`\n  line-height: 19px;\n\n  color: #4a5568;\n\n  margin-bottom: 11px;\n\n  & > input {\n    margin-top: 11px;\n  }\n`;\n\nexport const Input = styled.input`\n  padding: 17px 0 17px 20px;\n  width: 100%;\n\n  border-radius: 8px;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  outline: none;\n\n  font-size: 14px;\n  line-height: 16px;\n  color: #2d3748;\n\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border: 1px solid #a5fd91;\n  }\n\n  &:not(:placeholder-shown) {\n    border: 1px solid #01b0c8;\n  }\n`;\n\nexport const Btn = styled.button`\n  background-color: #a5fd91;\n  color: #ffffff;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 19px;\n\n  padding: 15px 0 16px;\n\n  border-radius: 5px;\n  border-color: transparent;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: 1px solid #01b0c8;\n  }\n`;\n\nexport const PswrdReset = styled.p`\n  font-size: 14px;\n  line-height: 16px;\n\n  color: #2c5282;\n\n  margin-bottom: 27px;\n`;\n","// Core\nimport { useUserContext } from 'context/userContext';\nimport { useRef } from 'react';\n\n// Styles\nimport {\n  Container,\n  Greeting,\n  Login,\n  Form,\n  Label,\n  Input,\n  PswrdReset,\n  Btn,\n} from './SignIn.styled';\n\nexport const SignIn = () => {\n  const emailRef = useRef();\n  const pswrdRef = useRef();\n  const { signIn, restorePswrd } = useUserContext();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const email = emailRef.current.value;\n    const pswrd = pswrdRef.current.value;\n\n    if (email && pswrd) signIn(email, pswrd);\n  };\n\n  const onPswrdReset = async () => {\n    const email = emailRef.current.value;\n    // if (!email) return;\n\n    await restorePswrd(email);\n    email.Ref.current.value = '';\n  };\n\n  return (\n    <Container>\n      <Greeting>Welcome back</Greeting>\n      <Login> Login to your account </Login>\n      <Form onSubmit={onSubmit}>\n        <Label>\n          Email\n          <Input\n            type=\"email\"\n            placeholder=\"example@gmail.com\"\n            autoComplete=\"on\"\n            ref={emailRef}\n          />\n        </Label>\n        <Label>\n          Password\n          <Input\n            type=\"password\"\n            placeholder=\"********\"\n            autoComplete=\"on\"\n            ref={pswrdRef}\n          />\n        </Label>\n        <PswrdReset onClick={onPswrdReset}>Forgot Password?</PswrdReset>\n        <Btn type=\"submit\">Sign In</Btn>\n      </Form>\n    </Container>\n  );\n};\n","export const SignUp = () => {\n  return <p>SignUp</p>;\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n","// Core\nimport { useState } from 'react';\nimport { useUserContext } from 'context/userContext';\n\n// Components\nimport { SignIn } from 'components/SignIn';\nimport { SignUp } from 'components/SignUp';\n\n// Styles\nimport { Container } from './Auth.styled';\n\nexport const Auth = () => {\n  const [index, setIndex] = useState(false);\n\n  const toggleIndex = () => setIndex(prevState => !prevState);\n\n  const { signInWithGoogle, signInWithGithub } = useUserContext();\n\n  return (\n    <Container>\n      {!index ? <SignIn /> : <SignUp />}\n      <div>\n        <span>OR</span>\n      </div>\n      <button onClick={signInWithGoogle}>Continue with Google</button>\n      <button onClick={signInWithGithub}>Continue with GitHub</button>\n      <p onClick={toggleIndex}>\n        {!index ? 'New user? Click here ' : 'Already have an acount?'}\n      </p>\n    </Container>\n  );\n};\n","// Components\nimport { Auth } from 'components/Auth';\n\nconst Home = () => {\n  return <Auth></Auth>;\n};\n\nexport default Home;\n"],"names":["Container","styled","Greeting","Login","Form","Label","Input","Btn","PswrdReset","SignIn","emailRef","useRef","pswrdRef","useUserContext","signIn","restorePswrd","onPswrdReset","email","current","value","Ref","onSubmit","e","preventDefault","pswrd","type","placeholder","autoComplete","ref","onClick","SignUp","Auth","useState","index","setIndex","signInWithGoogle","signInWithGithub","prevState"],"sourceRoot":""}