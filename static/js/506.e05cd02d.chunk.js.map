{"version":3,"file":"static/js/506.e05cd02d.chunk.js","mappings":"8LAGaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAQ,GACRC,MAAO,GACPC,MAAM,UACNC,aAAc,CACZC,SAAU,QACVC,IAAK,MACLC,KAAM,OACNC,UAAW,yBAEbC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,GAG3B,C,oMCjBYC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,ua,SCAVE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,IADF,IAC0BC,IAG7B,E,UCTYC,EAAYL,EAAAA,GAAAA,IAAH,kECATM,EAAmB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzBC,EAAuDD,EAAvDC,KAAMC,EAAiDF,EAAjDE,MAAOC,EAA0CH,EAA1CG,OAAQC,EAAkCJ,EAAlCI,QAASC,EAAyBL,EAAzBK,OAAQC,EAAiBN,EAAjBM,OAAQC,EAASP,EAATO,KAEtD,OACE,UAACT,EAAD,YACE,gBAAKU,IAAKN,EAAOO,IAAKR,KACtB,wBAAKA,KACL,0CACA,2BACE,2BACE,oCACA,uBAAIE,GAAkB,oBAExB,2BACE,oCACA,uBAAIE,GAAkB,oBAExB,2BACE,oCACA,uBAAID,GAAoB,oBAE1B,2BACE,oCACA,uBAAIE,EAAOL,KAAOK,EAAOL,KAAO,oBAElC,2BACE,kCACA,uBAAIM,GAAc,wBAK3B,EChCYG,EAAOjB,EAAAA,GAAAA,KAAH,mLCsDjB,EAzCsB,WAAO,IAAD,IAC1B,GAAkCkB,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAgBC,EAAAA,EAAAA,MAAhBD,YAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,QAuB7C,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,oGAErBV,GAAW,GACXE,EAAS,IAHY,UAIAS,EAAAA,EAAAA,IAAoBR,GAJpB,OAIfS,EAJe,OAKrBd,EAAac,GACbZ,GAAW,GANU,kDAQrBE,EAAS,iDARY,0DAAH,qDAYtBQ,GACD,GAAE,CAACP,KAEJM,EAAAA,EAAAA,YAAU,WACHR,GACLY,EAAAA,GAAAA,MAAYZ,EACb,GAAE,CAACA,IAEAF,GAAgB,SAACrC,EAAA,EAAD,IAChBuC,GAAc,SAAC,KAAD,CAASlC,SAAS,eAGlC,UAAC4B,EAAD,YACE,SAACf,EAAD,CAAUC,GAAIwB,EAAd,uBACCR,IAAa,SAACb,EAAD,CAAkBC,KAAMY,MAG3C,C,mJCnDDiB,EAAAA,EAAAA,SAAAA,QAAyB,kCAGlB,IAAMC,EAAiB,mCAAG,iHAEND,EAAAA,EAAAA,IAAU,uBAFJ,uBAErB7B,EAFqB,EAErBA,KACF2B,EAASI,EAAW/B,EAAKgC,SAHF,kBAItBC,EAAeN,IAJO,gCAM7BO,QAAQlB,MAAM,SAAU,KAAMmB,SAND,yDAAH,qDAUjBC,EAAmB,mCAAG,WAAMnC,GAAN,kFACjCiC,QAAQG,IAAIpC,GADqB,kBAGR4B,EAAAA,EAAAA,IAAA,4BAA+B5B,IAHvB,uBAGvBD,EAHuB,EAGvBA,KACF2B,EAASI,EAAW/B,EAAKgC,SAJA,kBAKxBC,EAAeN,IALS,kCAO/BO,QAAQlB,MAAM,SAAU,KAAMmB,SAPC,0DAAH,sDAWnBT,EAAmB,mCAAG,WAAMY,GAAN,kGAERT,EAAAA,EAAAA,IAAA,sBAAyBS,IAFjB,uBAEvBtC,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,gCAK/BkC,QAAQlB,MAAM,SAAU,KAAMmB,SALC,yDAAH,sDAS1BJ,EAAa,SAAAQ,GAAU,OAC3BA,EAAWC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAExC,KAAK0C,cAAcD,EAAEzC,KAAjC,GADW,EAGvBgC,EAAiB,SAAAW,GAAI,OACzBA,EAAKC,KAAI,gBAAGP,EAAH,EAAGA,GAAIrC,EAAP,EAAOA,KAAMG,EAAb,EAAaA,QAAb,MAAmC,CAC1CkC,GAAAA,EACArC,KAAAA,EACAG,QAASA,GAAoB,cAC7BF,MAJO,EAAsBA,MAAtB,GADgB,C","sources":["components/Loader/Loader.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/CharacterDetails/CharacterDetails.styled.js","components/CharacterDetails/CharacterDetails.jsx","pages/CharacterInfo/CharacterInfo.styled.js","pages/CharacterInfo/CharacterInfo.jsx","services/rickAndMortyAPI.js"],"sourcesContent":["// Utils\nimport { Oval } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Oval\n      height={80}\n      width={80}\n      color=\"#01b0c8\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"oval-loading\"\n      secondaryColor=\"#a5fd91\"\n      strokeWidth={2}\n      strokeWidthSecondary={1}\n    />\n  );\n};\n","// Core\nimport { Link } from 'react-router-dom';\n\n// Utils\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n\n  font-family: 'Karla';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 21px;\n\n  color: #000000;\n  text-decoration: none;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  margin-bottom: 77px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 31px;\n  }\n\n  :hover {\n    color: #01b0c8;\n  }\n`;\n","// Core\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\n\n// Styles\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <AiOutlineArrowLeft /> {children}\n    </StyledLink>\n  );\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  text-align: center;\n`;\n","// Styles\nimport { Container } from './CharacterDetails.styled';\n\nexport const CharacterDetails = ({ data }) => {\n  const { name, image, gender, species, status, origin, type } = data;\n\n  return (\n    <Container>\n      <img src={image} alt={name} />\n      <h1>{name}</h1>\n      <h2>Informations</h2>\n      <ul>\n        <li>\n          <h3>Gender</h3>\n          <p>{gender ? gender : 'Unknown yet'}</p>\n        </li>\n        <li>\n          <h3>Status</h3>\n          <p>{status ? status : 'Unknown yet'}</p>\n        </li>\n        <li>\n          <h3>Specie</h3>\n          <p>{species ? species : 'Unknown yet'}</p>\n        </li>\n        <li>\n          <h3>Origin</h3>\n          <p>{origin.name ? origin.name : 'Unknown yet'}</p>\n        </li>\n        <li>\n          <h3>Type</h3>\n          <p>{type ? type : 'Unknown yet'}</p>\n        </li>\n      </ul>\n    </Container>\n  );\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Main = styled.main`\n  margin: 23px auto 85px;\n  padding: 0 32px 0 24px;\n\n  @media screen and (min-width: 768px) {\n    margin: 21px auto 142px;\n    padding: 0 50px;\n  }\n`;\n","// Core\nimport { useState, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\n\n// API\nimport { getCharacterDetails } from '../../services/rickAndMortyAPI';\n\n// Components\nimport { BackLink } from 'components/BackLink';\nimport { Loader } from 'components/Loader';\nimport { CharacterDetails } from 'components/CharacterDetails';\n\n// Styles\nimport { Main } from './CharacterInfo.styled';\n\nconst CharacterInfo = () => {\n  const [character, setCharacter] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const { characterId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/feed';\n\n  useEffect(() => {\n    const getCharacterInfo = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const result = await getCharacterDetails(characterId);\n        setCharacter(result);\n        setLoading(false);\n      } catch (error) {\n        setError(\"Sorry, the character wasn't foundðŸ˜–\");\n      }\n    };\n\n    getCharacterInfo();\n  }, [characterId]);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  if (loading) return <Loader />;\n  if (error) return <Toaster position=\"top-right\" />;\n\n  return (\n    <Main>\n      <BackLink to={backLinkHref}> GO BACK </BackLink>\n      {character && <CharacterDetails data={character} />}\n    </Main>\n  );\n};\n\nexport default CharacterInfo;\n","// Utils\nimport axios from 'axios';\n\n// Setups\naxios.defaults.baseURL = 'https://rickandmortyapi.com/api';\n\n// HTTP requests\nexport const getCharactersFeed = async () => {\n  try {\n    const { data } = await axios.get('./character/?page=2');\n    const result = sortByName(data.results);\n    return normalizedList(result);\n  } catch (error) {\n    console.error('error:', error.message);\n  }\n};\n\nexport const getCharactersByName = async name => {\n  console.log(name);\n  try {\n    const { data } = await axios.get(`./character/?name=${name}`);\n    const result = sortByName(data.results);\n    return normalizedList(result);\n  } catch (error) {\n    console.error('error:', error.message);\n  }\n};\n\nexport const getCharacterDetails = async id => {\n  try {\n    const { data } = await axios.get(`./character/${id}`);\n    return data;\n  } catch (error) {\n    console.error('error:', error.message);\n  }\n};\n\nconst sortByName = characters =>\n  characters.sort((a, b) => a.name.localeCompare(b.name));\n\nconst normalizedList = feed =>\n  feed.map(({ id, name, species, image }) => ({\n    id,\n    name,\n    species: species ? species : 'Unknown yet',\n    image,\n  }));\n"],"names":["Loader","height","width","color","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","StyledLink","styled","Link","BackLink","to","children","Container","CharacterDetails","data","name","image","gender","species","status","origin","type","src","alt","Main","useState","character","setCharacter","loading","setLoading","error","setError","characterId","useParams","backLinkHref","useLocation","state","from","useEffect","getCharacterInfo","getCharacterDetails","result","toast","axios","getCharactersFeed","sortByName","results","normalizedList","console","message","getCharactersByName","log","id","characters","sort","a","b","localeCompare","feed","map"],"sourceRoot":""}