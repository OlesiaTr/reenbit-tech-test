{"version":3,"file":"static/js/506.2df23fd5.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/CharacterDetails/CharacterDetails.styled.js","components/CharacterDetails/CharacterDetails.jsx","pages/CharacterInfo/CharacterInfo.styled.js","pages/CharacterInfo/CharacterInfo.jsx","services/rickAndMortyAPI.js"],"sourcesContent":["// Core\nimport { Link } from 'react-router-dom';\n\n// Utils\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n\n  font-family: 'Karla';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 21px;\n\n  color: #000000;\n  text-decoration: none;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  margin-bottom: 77px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 31px;\n  }\n\n  :hover {\n    color: #01b0c8;\n  }\n`;\n","// Core\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\n\n// Styles\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <AiOutlineArrowLeft size=\"24\" /> {children}\n    </StyledLink>\n  );\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  text-align: center;\n`;\n\nexport const Img = styled.img`\n  display: inline-block;\n  border-radius: 50%;\n  border: 5px solid #f2f2f7;\n  height: 148px;\n\n  margin-bottom: 34px;\n\n  @media screen and (min-width: 768px) {\n    height: 300px;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Name = styled.h1`\n  font-size: 32px;\n  line-height: 38px;\n  font-weight: 400;\n\n  color: #081f32;\n\n  margin-bottom: 34px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 48px;\n    line-height: 56px;\n\n    margin-bottom: 48px;\n  }\n`;\n\nexport const Info = styled.h2`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 120%;\n  letter-spacing: 0.15px;\n\n  color: #8e8e93;\n  text-align: start;\n\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    text-align: center;\n\n    margin-bottom: 48px;\n  }\n`;\n\nexport const List = styled.ul`\n  text-align: start;\n\n  margin: 0 32px 0 40px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 413px;\n\n    margin: 0 auto;\n  }\n`;\n\nexport const Item = styled.li`\n  padding: 9px 0 12px 0px;\n\n  border-bottom: 1px solid rgba(33, 33, 33, 0.08);\n`;\n\nexport const InfoTitles = styled.h3`\n  font-weight: 700;\n  line-height: 150%;\n  letter-spacing: 0.15px;\n\n  color: #081f32;\n`;\n\nexport const InfoDesc = styled.p`\n  font-size: 14px;\n  line-height: 143%;\n  letter-spacing: 0.25px;\n  text-transform: capitalize;\n\n  color: #6e798c;\n`;\n","// Styles\nimport {\n  Container,\n  Img,\n  Name,\n  Info,\n  List,\n  Item,\n  InfoTitles,\n  InfoDesc,\n} from './CharacterDetails.styled';\n\nexport const CharacterDetails = ({ data }) => {\n  const { name, image, gender, species, status, origin, type } = data;\n\n  return (\n    <Container>\n      <Img src={image} alt={name} />\n      <Name>{name}</Name>\n      <Info>Informations</Info>\n      <List>\n        <Item>\n          <InfoTitles>Gender</InfoTitles>\n          <InfoDesc>{gender ? gender : 'Unknown yet'}</InfoDesc>\n        </Item>\n        <Item>\n          <InfoTitles>Status</InfoTitles>\n          <InfoDesc>{status ? status : 'Unknown yet'}</InfoDesc>\n        </Item>\n        <Item>\n          <InfoTitles>Specie</InfoTitles>\n          <InfoDesc>{species ? species : 'Unknown yet'}</InfoDesc>\n        </Item>\n        <Item>\n          <InfoTitles>Origin</InfoTitles>\n          <InfoDesc>{origin.name ? origin.name : 'Unknown yet'}</InfoDesc>\n        </Item>\n        <Item>\n          <InfoTitles>Type</InfoTitles>\n          <InfoDesc>{type ? type : 'Unknown yet'}</InfoDesc>\n        </Item>\n      </List>\n    </Container>\n  );\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Main = styled.main`\n  margin: 23px auto 85px;\n  padding: 0 32px 0 24px;\n\n  @media screen and (min-width: 768px) {\n    margin: 21px auto 142px;\n    padding: 0 50px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n  }\n`;\n","// Core\nimport { useState, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\n\n// API\nimport { getCharacterDetails } from 'services/rickAndMortyAPI';\n\n// Components\nimport { BackLink } from 'components/BackLink';\nimport { Loader } from 'components/Loader';\nimport { CharacterDetails } from 'components/CharacterDetails';\n\n// Styles\nimport { Main } from './CharacterInfo.styled';\n\nconst CharacterInfo = () => {\n  const [character, setCharacter] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const { characterId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/feed';\n\n  useEffect(() => {\n    const getCharacterInfo = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const result = await getCharacterDetails(characterId);\n        setCharacter(result);\n        setLoading(false);\n      } catch (error) {\n        setError(\"Sorry, the character wasn't foundðŸ˜–\");\n      }\n    };\n\n    getCharacterInfo();\n  }, [characterId]);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  if (loading) return <Loader />;\n  if (error) return <Toaster position=\"top-right\" />;\n\n  return (\n    <Main>\n      <BackLink to={backLinkHref}> GO BACK </BackLink>\n      {character && <CharacterDetails data={character} />}\n    </Main>\n  );\n};\n\nexport default CharacterInfo;\n","// Utils\nimport axios from 'axios';\n\n// Setups\naxios.defaults.baseURL = 'https://rickandmortyapi.com/api';\n\n// HTTP requests\nexport const getCharactersFeed = async () => {\n  try {\n    const { data } = await axios.get('./character/?page=2');\n    const result = sortByName(data.results);\n    return normalizedList(result);\n  } catch (error) {\n    console.error('Error fetching character details:', error);\n    throw error;\n  }\n};\n\nexport const getCharactersByName = async name => {\n  try {\n    const { data } = await axios.get(`./character/?name=${name}`);\n    const result = sortByName(data.results);\n    return normalizedList(result);\n  } catch (error) {\n    console.error('Error fetching character details:', error);\n    throw error;\n  }\n};\n\nexport const getCharacterDetails = async id => {\n  try {\n    const { data } = await axios.get(`./character/${id}`);\n    return data;\n  } catch (error) {\n    console.error('Error fetching character details:', error);\n    throw error;\n  }\n};\n\nconst sortByName = characters =>\n  characters.sort((a, b) => a.name.localeCompare(b.name));\n\nconst normalizedList = feed =>\n  feed.map(({ id, name, species, image }) => ({\n    id,\n    name,\n    species: species ? species : 'Unknown yet',\n    image,\n  }));\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","Container","Img","Name","Info","List","Item","InfoTitles","InfoDesc","CharacterDetails","data","name","image","gender","species","status","origin","type","src","alt","Main","useState","character","setCharacter","loading","setLoading","error","setError","characterId","useParams","backLinkHref","useLocation","state","from","useEffect","getCharacterInfo","getCharacterDetails","result","toast","Loader","position","axios","getCharactersFeed","sortByName","results","normalizedList","console","getCharactersByName","id","characters","sort","a","b","localeCompare","feed","map"],"sourceRoot":""}